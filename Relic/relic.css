.sheet-group span.grouplabel {
    font-size: 2em;
    color: cadetblue;
}

.sheet-group span.label {
    font-size: 1.5em;
    color: black;
}

.charsheet main.character,
.charsheet main.party,
.charsheet main.gamemaster,
.charsheet main.settings {
  display: none;
}
.charsheet input.tabstoggle[value=character] ~ main.character,
.charsheet input.tabstoggle[value=party] ~ main.party,
.charsheet input.tabstoggle[value=gamemaster] ~ main.gamemaster,
.charsheet input.tabstoggle[value=settings] ~ main.settings {
  display: grid;
}

.charsheet div.tab-buttons {
  display: flex;
  gap: 10px;
}

/* show the selected kit */
.charsheet .kit-selector img {
  max-width: 400px;
  max-height: 300px;
}


/* main layout grid */

.container {  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: min-content min-content min-content min-content;
  grid-auto-columns: 1fr;
  gap: 0px 0px;
  grid-auto-flow: row;
  grid-template-areas:
    "MainDetails MainDetails Right-Column"
    "Talisman Talisman Right-Column"
    "Gear Gear Right-Column"
    "Arcs Arcs Right-Column";
}

.MainDetails {  display: grid;
  grid-template-columns: 2fr 1fr 1fr;
  grid-template-rows: min-content min-content;
  gap: 0px 0px;
  grid-auto-flow: row;
  grid-template-areas:
    "Essentials Essentials Portrait"
    "Companions Group Group";
  grid-area: MainDetails;
}

.Companions { grid-area: Companions; }

.Group { grid-area: Group; }

.Essentials { grid-area: Essentials; }

.Portrait { grid-area: Portrait; }

.Right-Column { grid-area: Right-Column; }

.Talisman {  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-template-rows: min-content;
  gap: 0px 0px;
  grid-auto-flow: row;
  grid-template-areas:
    "TalismanAbilities TalismanPicture";
  grid-area: Talisman;
}

.TalismanAbilities { grid-area: TalismanAbilities; }

.TalismanPicture { grid-area: TalismanPicture; }

.Gear {  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: min-content;
  gap: 0px 0px;
  grid-auto-flow: row;
  grid-template-areas:
    "GearLeft GearRight";
  grid-area: Gear;
}

.GearLeft { grid-area: GearLeft; }

.GearRight { grid-area: GearRight; }

.Arcs { grid-area: Arcs; }



/* Table Style*/
.divTable{
	display: table;
	width: 100%;
}
.divTableRow {
	display: table-row;
}
.divTableHeading {
	background-color: #EEE;
	display: table-header-group;
}
.divTableCell, .divTableHead {
	border: 1px solid #999999;
	display: table-cell;
	padding: 3px 10px;
}
.divTableHeading {
	background-color: #EEE;
	display: table-header-group;
	font-weight: bold;
}
.divTableFoot {
	background-color: #EEE;
	display: table-footer-group;
	font-weight: bold;
}
.divTableBody {
	display: table-row-group;
}



/* Actions & Knacks */
.actions-block label {
  display: inline;
}

.actions-block input[type=checkbox] {
	opacity: 0;
	z-index: 1;
	margin: 0;
	padding: 0;
	flex-shrink: 0;
	position: absolute;
	-moz-appearance: none;
}

.actions-block input[type=checkbox] + span {
	display: inline-block;
	transition: all 0.2s;
	flex-shrink: 0;
}

.actions-block .text-button {
	text-transform: uppercase;
	font-weight: bold;
	line-height: inherit;
	cursor: pointer;
}
.actions-block .text-button + span {
	margin: auto;
}
.actions-block .text-button input:checked + span {
	color: #e34a3a;
	text-shadow: 0 0 2px red;
}

.actions-block input.text-input:checked + span {
	color: #e34a3a;
	text-shadow: 0 0 2px red;
}

